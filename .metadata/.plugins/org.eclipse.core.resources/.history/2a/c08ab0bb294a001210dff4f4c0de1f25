package uk.ac.cam.cl.ss958.SpringBoardSimulation;


import java.awt.BorderLayout;
import java.awt.Color;

import javax.swing.BorderFactory;
import javax.swing.JComponent;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.border.Border;
import javax.swing.border.EtchedBorder;

public class MainGui extends JFrame {
	private SimulationPanel simulationPanel;
	private OptionsPanel optionsPanel;
	private SimulationModel model;
	
	MainGui() {
		super("SpringBoard Network Simulation");
		setDefaultCloseOperation(EXIT_ON_CLOSE);

		setLayout(new BorderLayout());

		model = new SimulationModel(740,680) {
			private void onChange() {
				System.out.println("onChange");
				modelChanged();
			}
		};

		simulationPanel = new SimulationPanel(model);
		add(createsScrollPanel(simulationPanel, Strings.PANEL_SIMULATION),BorderLayout.CENTER);

		addUsersToModel(10);

		optionsPanel = new OptionsPanel();
		add(createsScrollPanel(optionsPanel, Strings.PANEL_OPTIONS),BorderLayout.EAST);
		setSize(1024,768);
	}

	private void addBorder(JComponent component, String title) {
		Border etch = BorderFactory.createEtchedBorder(EtchedBorder.LOWERED);
		Border tb = BorderFactory.createTitledBorder(etch,title);
		component.setBorder(tb);
	}
	
	private JComponent createsScrollPanel(JPanel panel, String name) {
		JPanel holder = new JPanel();
		addBorder(holder, name);
		holder.add(panel);
		return new JScrollPane(holder);
	}
	
	private void addUsersToModel(int n) {
		for(int i=0; i<n; ++i) {
			if(!model.AddUserAtRandomLocation(new User())) {
				System.out.println("Cannot place user");
			}
		}
		simulationPanel.repaint();
	}
	

	public static void main(String[] args) {
		MainGui hello = new MainGui(); //create instance 
		hello.setVisible(true);                        //display window to user
	}
	
	public void modelChanged() {
		if(simulationPanel != null) {
			simulationPanel.repaint();
		}
	}
}

